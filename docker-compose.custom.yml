#
# Custom Docker Compose Configuration for Firefly III
# Built from source code with full customization support
#
# Usage:
#   docker-compose -f docker-compose.custom.yml up -d
#
# Before starting:
#   1. Copy .env.docker.example to .env.docker and configure
#   2. Generate APP_KEY: docker-compose -f docker-compose.custom.yml run --rm app php artisan key:generate --show
#   3. Generate STATIC_CRON_TOKEN: openssl rand -hex 16
#

version: '3.8'

services:
  #############################################################################
  # Firefly III Application (Built from Source)
  #############################################################################
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: firefly-iii-custom:latest
    container_name: firefly_iii_app
    hostname: app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    networks:
      - firefly
    ports:
      - "8080:8080"
    volumes:
      # Persistent storage for uploads
      - firefly_upload:/var/www/html/storage/upload
      # Optional: Mount source code for development (comment out for production)
      # - ./:/var/www/html:cached
    env_file:
      - .env.docker
    environment:
      # Database connection
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-firefly}
      DB_USERNAME: ${DB_USERNAME:-firefly}
      DB_PASSWORD: ${DB_PASSWORD}

      # Application settings
      APP_ENV: ${APP_ENV:-production}
      APP_DEBUG: ${APP_DEBUG:-false}
      APP_KEY: ${APP_KEY}
      APP_URL: ${APP_URL:-http://localhost:8080}

      # Frontend layout version (v1 or v2)
      FIREFLY_III_LAYOUT: ${FIREFLY_III_LAYOUT:-v1}

      # Cron token for scheduled tasks
      STATIC_CRON_TOKEN: ${STATIC_CRON_TOKEN}

      # Trust proxy (required for Docker)
      TRUSTED_PROXIES: "**"

      # Site owner email
      SITE_OWNER: ${SITE_OWNER:-admin@example.com}

      # Timezone
      TZ: ${TZ:-UTC}
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  #############################################################################
  # PostgreSQL Database
  #############################################################################
  db:
    image: postgres:16-alpine
    container_name: firefly_iii_db
    hostname: db
    restart: unless-stopped
    networks:
      - firefly
    environment:
      POSTGRES_DB: ${DB_DATABASE:-firefly}
      POSTGRES_USER: ${DB_USERNAME:-firefly}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - firefly_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-firefly}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  #############################################################################
  # Firefly III Data Importer
  #############################################################################
  importer:
    image: fireflyiii/data-importer:latest
    container_name: firefly_iii_importer
    hostname: importer
    restart: unless-stopped
    depends_on:
      - app
    networks:
      - firefly
    ports:
      - "8081:8080"
    environment:
      # Firefly III connection
      FIREFLY_III_URL: http://app:8080
      VANITY_URL: ${APP_URL:-http://localhost:8080}

      # Importer settings
      EXPECT_SECURE_URL: ${IMPORTER_EXPECT_SECURE_URL:-false}
      TRUSTED_PROXIES: "**"

      # Optional: Pre-configure access token (generate at /profile in Firefly III)
      FIREFLY_III_ACCESS_TOKEN: ${FIREFLY_III_ACCESS_TOKEN:-}

      # Timezone
      TZ: ${TZ:-UTC}

  #############################################################################
  # Cron Job Service (Recurring Transactions & Scheduled Tasks)
  #############################################################################
  cron:
    image: alpine:latest
    container_name: firefly_iii_cron
    hostname: cron
    restart: unless-stopped
    depends_on:
      - app
    networks:
      - firefly
    environment:
      STATIC_CRON_TOKEN: ${STATIC_CRON_TOKEN}
      TZ: ${TZ:-UTC}
    command: >
      sh -c "
      apk add --no-cache wget tzdata &&
      (ln -fs /usr/share/zoneinfo/$$TZ /etc/localtime || true) &&
      echo '0 3 * * * wget -qO- http://app:8080/api/v1/cron/$$STATIC_CRON_TOKEN && echo Cron executed' | crontab - &&
      echo Cron job scheduled at 3 AM daily &&
      crond -f -L /dev/stdout
      "

  #############################################################################
  # Nginx Reverse Proxy (Optional - Production Setup)
  #############################################################################
  # Uncomment this section if you want Nginx as reverse proxy
  # nginx:
  #   image: nginx:alpine
  #   container_name: firefly_iii_nginx
  #   restart: unless-stopped
  #   depends_on:
  #     - app
  #   networks:
  #     - firefly
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
  #     - firefly_upload:/var/www/html/storage/upload:ro
  #     # For SSL certificates:
  #     # - ./docker/ssl:/etc/nginx/ssl:ro
  #   environment:
  #     TZ: ${TZ:-UTC}

  #############################################################################
  # Redis Cache (Optional - Performance Optimization)
  #############################################################################
  # Uncomment this section if you want Redis for caching
  # redis:
  #   image: redis:7-alpine
  #   container_name: firefly_iii_redis
  #   hostname: redis
  #   restart: unless-stopped
  #   networks:
  #     - firefly
  #   volumes:
  #     - firefly_redis:/data
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

#############################################################################
# Volumes
#############################################################################
volumes:
  firefly_db:
    driver: local
    name: firefly_iii_db_custom
  firefly_upload:
    driver: local
    name: firefly_iii_upload_custom
  # Uncomment if using Redis
  # firefly_redis:
  #   driver: local
  #   name: firefly_iii_redis_custom

#############################################################################
# Networks
#############################################################################
networks:
  firefly:
    driver: bridge
    name: firefly_iii_network
