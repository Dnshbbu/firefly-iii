# Version frozen to avoid any issues
name: expense-insights3

services:
  app:
    # image: fireflyiii/core:latest
    image: fireflyiii/core:version-6.4.2
    hostname: app
    container_name: firefly_iii_core_3
    networks:
      - firefly_iii
    restart: always
    env_file: .env
    ports:
      - '8083:8080'  # changed to avoid conflict with expense-insights2
    depends_on:
      - db
    volumes:
      # reuse existing upload volume from expense-insights2
      - expense-insights2_expense-insights2_firefly_iii_upload:/var/www/html/storage/upload

  db:
    # image: postgres:latest
    image: postgres:18
    hostname: db
    container_name: firefly_iii_db_3
    networks:
      - firefly_iii
    restart: always
    env_file: .db.env
    volumes:
      # reuse existing database volume from expense-insights2
      - expense-insights2_expense-insights2_firefly_iii_db:/var/lib/postgresql/data

  cron:
    # image: alpine:latest
    image: alpine:3.22
    container_name: firefly_iii_cron_3
    restart: always
    networks:
      - firefly_iii
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: >
      sh -c "
      apk add --no-cache docker-cli curl &&
      while true; do
        echo 'Running Firefly III cron job...';
        docker exec firefly_iii_core_3 php artisan firefly-iii:cron;
        sleep 3600;
      done
      "

  importer:
    # image: fireflyiii/data-importer:latest
    image: fireflyiii/data-importer:version-1.8.4
    hostname: importer
    container_name: firefly_iii_importer_3
    restart: always
    networks:
      - firefly_iii
    env_file: .importer.env
    ports:
      - '8084:8080'  # changed to avoid conflict
    depends_on:
      - app

networks:
  firefly_iii:

volumes:
  # Declare volumes from expense-insights2 as external
  expense-insights2_expense-insights2_firefly_iii_upload:
    external: true
  expense-insights2_expense-insights2_firefly_iii_db:
    external: true
